# Step-by-Step Guide: Setting Up a Jekyll Site with Chirpy Theme for GitHub Pages

## Initial Setup
1. Created a GitHub repository named `odysseustheironwolf.github.io` for GitHub Pages
   ```
   # Go to GitHub.com and create a new repository named username.github.io
   ```
2. Cloned the repository locally
   ```
   git clone https://github.com/username/username.github.io.git
   cd username.github.io
   ```
3. Created README.md with basic information about the site
   ```
   echo "# My GitHub Pages Site" > README.md
   ```

## Jekyll Installation and Configuration
1. Installed Ruby (prerequisite for Jekyll)
   ```
   # For macOS with Homebrew:
   brew install ruby
   
   # Add Ruby to your PATH (add to ~/.zshrc or ~/.bash_profile):
   echo 'export PATH="/usr/local/opt/ruby/bin:$PATH"' >> ~/.zshrc
   source ~/.zshrc
   ```
2. Updated Ruby gems:
   ```
   gem update --system
   ```
3. Installed Jekyll and Bundler:
   ```
   gem install jekyll bundler
   ```
4. Created initial Gemfile with Jekyll dependency:
   ```
   bundle init
   echo 'gem "jekyll"' >> Gemfile
   ```
5. Ran bundle install to install dependencies:
   ```
   bundle install
   ```

## Setting Up Chirpy Theme
1. Decided to use the Chirpy theme after exploring theme options

2. Cloned the Chirpy starter template for a clean setup:
   ```
   # First, backup any existing files if needed
   mkdir -p ../backup
   cp -r * ../backup/
   
   # Clone the Chirpy starter
   git clone https://github.com/cotes2020/chirpy-starter.git temp
   cp -r temp/* .
   cp -r temp/.github .
   rm -rf temp
   ```

3. Created basic directory structure following Chirpy's requirements:
   ```
   mkdir -p _posts
   mkdir -p _tabs
   mkdir -p assets/img
   ```

4. Configured _config.yml with site information:
   ```
   # Edit _config.yml with your preferred text editor
   # Example using nano:
   nano _config.yml
   
   # Set these values in _config.yml:
   # title: Your Site Title
   # description: Your site description
   # timezone: Your/Timezone
   # baseurl: ""
   # url: "https://yourusername.github.io"
   # github:
   #   username: yourusername
   # social:
   #   name: Your Name
   #   email: your.email@example.com
   #   links:
   #     - https://github.com/yourusername
   ```

5. Updated Gemfile to include required dependencies:
   ```
   # Replace the content in your Gemfile:
   cat > Gemfile << 'EOF'
   source "https://rubygems.org"
   
   gem "jekyll", "~> 4.3"
   gem "jekyll-theme-chirpy", "~> 7.3", ">= 7.3.1"
   
   # Plugins
   group :jekyll_plugins do
     gem "jekyll-paginate"
     gem "jekyll-archives"
     gem "jekyll-sitemap"
     gem "jekyll-seo-tag"
     gem "jekyll-include-cache"
   end
   EOF
   
   # Install updated dependencies
   bundle install
   ```

6. Created sample content:
   ```
   # Create a sample post
   cat > _posts/2025-08-31-welcome-to-my-website.md << 'EOF'
   ---
   title: Welcome to My Website
   date: 2025-08-31 12:00:00 -0500
   categories: [welcome, introduction]
   tags: [hello, website, jekyll]
   image: /assets/img/welcome-banner.jpg
   ---

   # Welcome to my website!

   This is my first post using Jekyll and the Chirpy theme.
   EOF

   # Create About page
   cat > _tabs/about.md << 'EOF'
   ---
   title: About
   icon: fas fa-info-circle
   order: 1
   ---

   Welcome to my personal website. Here I'll share information about my projects and interests.
   EOF

   # Create Projects page
   cat > _tabs/projects.md << 'EOF'
   ---
   title: Projects
   icon: fas fa-project-diagram
   order: 2
   ---

   Here is a list of my projects:

   1. Project 1 - Description
   2. Project 2 - Description
   EOF

   # Create References page
   cat > _tabs/references.md << 'EOF'
   ---
   title: References
   icon: fas fa-book
   order: 3
   ---

   Useful resources and references:

   - [Jekyll](https://jekyllrb.com/)
   - [Chirpy Theme](https://github.com/cotes2020/jekyll-theme-chirpy)
   - [GitHub Pages](https://pages.github.com/)
   EOF
   ```

7. Fixed missing assets:
   ```
   # Create a placeholder image
   touch assets/img/welcome-banner.jpg
   # Or download an example image:
   # curl -o assets/img/welcome-banner.jpg https://example.com/path/to/image.jpg
   ```

## GitHub Pages Configuration
1. Set up GitHub Actions workflow for deployment:
   ```
   # Ensure .github/workflows directory exists
   mkdir -p .github/workflows
   
   # Create the GitHub Actions workflow file
   cat > .github/workflows/pages-deploy.yml << 'EOF'
   name: Deploy to GitHub Pages

   on:
     push:
       branches:
         - main
     workflow_dispatch:

   permissions:
     contents: read
     pages: write
     id-token: write

   concurrency:
     group: "pages"
     cancel-in-progress: true

   jobs:
     build:
       runs-on: ubuntu-latest

       steps:
         - name: Checkout
           uses: actions/checkout@v4

         - name: Setup Ruby
           uses: ruby/setup-ruby@v1
           with:
             ruby-version: '3.2'
             bundler-cache: true

         - name: Build site
           run: bundle exec jekyll build
           env:
             JEKYLL_ENV: production

         - name: Setup Pages
           uses: actions/configure-pages@v3

         - name: Upload artifact
           uses: actions/upload-pages-artifact@v2
           with:
             path: "_site"

     deploy:
       needs: build
       environment:
         name: github-pages
         url: ${{ steps.deployment.outputs.page_url }}
       runs-on: ubuntu-latest
       
       steps:
         - name: Deploy to GitHub Pages
           id: deployment
           uses: actions/deploy-pages@v2
   EOF
   ```

2. Updated _config.yml for GitHub Pages compatibility:
   ```
   # Edit your _config.yml to add or modify these settings:
   # baseurl: ""
   # url: "https://yourusername.github.io"
   
   # Ensure these plugins are in your _config.yml:
   # plugins:
   #   - jekyll-paginate
   #   - jekyll-archives
   #   - jekyll-sitemap
   #   - jekyll-seo-tag
   #   - jekyll-include-cache
   
   # Comment out remote_theme for local development:
   # # remote_theme: jekyll-theme-chirpy
   ```

## Testing and Deployment
1. Tested site locally using:
   ```
   # Install dependencies
   bundle install
   
   # Build site
   bundle exec jekyll build
   
   # Preview site locally (http://localhost:4000)
   bundle exec jekyll serve
   ```

2. Committed all changes to repository:
   ```
   # Add all files to git
   git add .
   
   # Initial commit
   git commit -m "Initial setup with Chirpy theme"
   ```

3. Fixed any configuration issues:
   ```
   # Add missing plugins to Gemfile if needed
   echo 'gem "jekyll-paginate"' >> Gemfile
   echo 'gem "jekyll-archives"' >> Gemfile
   echo 'gem "jekyll-sitemap"' >> Gemfile
   echo 'gem "jekyll-include-cache"' >> Gemfile
   
   # Install new dependencies
   bundle install
   
   # Commit fixes
   git add .
   git commit -m "Fix site configuration and add missing plugins"
   ```

4. Pushed changes to GitHub for deployment:
   ```
   git push origin main
   ```

## Next Steps
1. Replace the placeholder welcome-banner.jpg with an actual image:
   ```
   # Replace with your own image
   cp /path/to/your/image.jpg assets/img/welcome-banner.jpg
   
   # Alternatively, download an image
   curl -o assets/img/welcome-banner.jpg https://example.com/path/to/image.jpg
   
   # Commit the new image
   git add assets/img/welcome-banner.jpg
   git commit -m "Add welcome banner image"
   git push origin main
   ```

2. Continue adding content to your website:
   ```
   # Create a new blog post
   cat > _posts/$(date +%Y-%m-%d)-new-post-title.md << 'EOF'
   ---
   title: New Post Title
   date: $(date +"%Y-%m-%d %H:%M:%S %z")
   categories: [category1, category2]
   tags: [tag1, tag2, tag3]
   ---

   Content of your new post goes here.
   EOF
   
   # Update About page
   nano _tabs/about.md
   
   # Add projects to Projects page
   nano _tabs/projects.md
   ```

3. Monitor GitHub Pages deployment:
   ```
   # Go to your GitHub repository
   # Click on "Actions" tab to view deployment progress
   # Deployment typically takes 1-3 minutes
   ```

4. Access your site at https://yourusername.github.io/

5. Enable GitHub Pages in repository settings if not already enabled:
   ```
   # Go to your repository on GitHub
   # Click Settings -> Pages
   # Source: Deploy from a branch or GitHub Actions
   # If using branch: select main and / (root)
   ```

Note: The site uses Jekyll 4.4.1 and Chirpy theme version 7.3.1+. All files are configured for both local development and GitHub Pages deployment. For further customization, see the [Chirpy theme documentation](https://chirpy.cotes.page/posts/getting-started/).
